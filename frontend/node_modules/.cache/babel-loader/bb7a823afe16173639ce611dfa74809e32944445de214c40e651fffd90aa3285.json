{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000';\nclass ApiService {\n  static async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      ...options\n    };\n\n    // Add auth token if available\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers = {\n        ...config.headers,\n        'Authorization': `Bearer ${token}`\n      };\n    }\n\n    // Only add Content-Type for non-FormData requests\n    if (!(options.body instanceof FormData)) {\n      config.headers = {\n        'Content-Type': 'application/json',\n        ...config.headers\n      };\n    }\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        if (response.status === 401) {\n          // Token expired or invalid\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          throw new Error('Session expired. Please login again.');\n        }\n        let errorMessage;\n        try {\n          const errorData = await response.json();\n          errorMessage = errorData.message || errorData.error || `HTTP ${response.status}`;\n        } catch {\n          errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n        }\n        throw new Error(errorMessage);\n      }\n      const data = await response.json();\n      console.log(`API Response for ${endpoint}:`, data);\n      return data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n\n  // Staff management endpoints\n  static async getStaffList() {\n    try {\n      const response = await this.request('/api/staff');\n\n      // Handle different response structures\n      if (Array.isArray(response)) {\n        return response;\n      } else if (response && Array.isArray(response.data)) {\n        return response.data;\n      } else if (response && Array.isArray(response.staff)) {\n        return response.staff;\n      } else {\n        console.warn('Unexpected staff list response format:', response);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching staff list:', error);\n      return []; // Return empty array on error\n    }\n  }\n\n  // ... rest of your methods remain the same\n  static async register(userData) {\n    return this.request('/api/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  }\n  static async login(credentials) {\n    return this.request('/api/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n  }\n  static async logout() {\n    try {\n      await this.request('/api/logout', {\n        method: 'POST'\n      });\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    }\n  }\n  static async forgotPassword(email) {\n    return this.request('/api/forgot-password', {\n      method: 'POST',\n      body: JSON.stringify({\n        email\n      })\n    });\n  }\n  static async resetPasswordWithCode(email, code, newPassword) {\n    return this.request('/api/reset-password', {\n      method: 'POST',\n      body: JSON.stringify({\n        email: email,\n        code: code,\n        new_password: newPassword\n      })\n    });\n  }\n  static async getStaff(id) {\n    return this.request(`/api/staff/${id}`);\n  }\n  static async addStaff(staffData) {\n    // Create FormData for file upload support\n    const formData = new FormData();\n\n    // Add all staff fields to FormData\n    Object.keys(staffData).forEach(key => {\n      const value = staffData[key];\n      if (value !== null && value !== undefined && value !== '') {\n        formData.append(key, value);\n      }\n    });\n\n    // Don't set Content-Type header - let browser set it for FormData\n    return this.request('/api/staff', {\n      method: 'POST',\n      body: formData\n    });\n  }\n  static async addStaffWithFile(staffData) {\n    // Create FormData for file upload support\n    const formData = new FormData();\n\n    // Add all staff fields to FormData\n    Object.keys(staffData).forEach(key => {\n      if (staffData[key] !== null && staffData[key] !== undefined) {\n        formData.append(key, staffData[key]);\n      }\n    });\n    return this.request('/api/staff', {\n      method: 'POST',\n      body: formData\n    });\n  }\n  static async updateStaff(id, staffData) {\n    return this.request(`/api/staff/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(staffData)\n    });\n  }\n  static async deleteStaff(id) {\n    return this.request(`/api/staff/${id}`, {\n      method: 'DELETE'\n    });\n  }\n  static async getDashboard() {\n    try {\n      const response = await this.request('/api/dashboard');\n\n      // Ensure proper structure\n      return {\n        totalStaff: response.totalStaff || response.total_staff || 0,\n        staffList: Array.isArray(response.staffList) ? response.staffList : [],\n        ...response\n      };\n    } catch (error) {\n      console.error('Error fetching dashboard:', error);\n      return {\n        totalStaff: 0,\n        staffList: []\n      };\n    }\n  }\n  static async getUserProfile() {\n    return this.request('/api/profile');\n  }\n  static async updateProfile(profileData) {\n    return this.request('/api/profile', {\n      method: 'PUT',\n      body: JSON.stringify(profileData)\n    });\n  }\n}\nexport default ApiService;","map":{"version":3,"names":["API_BASE_URL","ApiService","request","endpoint","options","url","config","token","localStorage","getItem","headers","body","FormData","response","fetch","ok","status","removeItem","Error","errorMessage","errorData","json","message","error","statusText","data","console","log","getStaffList","Array","isArray","staff","warn","register","userData","method","JSON","stringify","login","credentials","logout","forgotPassword","email","resetPasswordWithCode","code","newPassword","new_password","getStaff","id","addStaff","staffData","formData","Object","keys","forEach","key","value","undefined","append","addStaffWithFile","updateStaff","deleteStaff","getDashboard","totalStaff","total_staff","staffList","getUserProfile","updateProfile","profileData"],"sources":["C:/Users/USER/PycharmProjects/Company/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000';\r\n\r\nclass ApiService {\r\n  static async request(endpoint, options = {}) {\r\n    const url = `${API_BASE_URL}${endpoint}`;\r\n    const config = {\r\n      ...options,\r\n    };\r\n\r\n    // Add auth token if available\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers = {\r\n        ...config.headers,\r\n        'Authorization': `Bearer ${token}`,\r\n      };\r\n    }\r\n\r\n    // Only add Content-Type for non-FormData requests\r\n    if (!(options.body instanceof FormData)) {\r\n      config.headers = {\r\n        'Content-Type': 'application/json',\r\n        ...config.headers,\r\n      };\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          // Token expired or invalid\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          throw new Error('Session expired. Please login again.');\r\n        }\r\n\r\n        let errorMessage;\r\n        try {\r\n          const errorData = await response.json();\r\n          errorMessage = errorData.message || errorData.error || `HTTP ${response.status}`;\r\n        } catch {\r\n          errorMessage = `HTTP ${response.status}: ${response.statusText}`;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(`API Response for ${endpoint}:`, data);\r\n      return data;\r\n\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Staff management endpoints\r\n  static async getStaffList() {\r\n    try {\r\n      const response = await this.request('/api/staff');\r\n\r\n      // Handle different response structures\r\n      if (Array.isArray(response)) {\r\n        return response;\r\n      } else if (response && Array.isArray(response.data)) {\r\n        return response.data;\r\n      } else if (response && Array.isArray(response.staff)) {\r\n        return response.staff;\r\n      } else {\r\n        console.warn('Unexpected staff list response format:', response);\r\n        return [];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching staff list:', error);\r\n      return []; // Return empty array on error\r\n    }\r\n  }\r\n\r\n  // ... rest of your methods remain the same\r\n  static async register(userData) {\r\n    return this.request('/api/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData),\r\n    });\r\n  }\r\n\r\n  static async login(credentials) {\r\n    return this.request('/api/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(credentials),\r\n    });\r\n  }\r\n\r\n  static async logout() {\r\n    try {\r\n      await this.request('/api/logout', {\r\n        method: 'POST',\r\n      });\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    }\r\n  }\r\n\r\n  static async forgotPassword(email) {\r\n    return this.request('/api/forgot-password', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email }),\r\n    });\r\n  }\r\n\r\n  static async resetPasswordWithCode(email, code, newPassword) {\r\n    return this.request('/api/reset-password', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        email: email,\r\n        code: code,\r\n        new_password: newPassword\r\n      }),\r\n    });\r\n  }\r\n\r\n  static async getStaff(id) {\r\n    return this.request(`/api/staff/${id}`);\r\n  }\r\n\r\n  static async addStaff(staffData) {\r\n    // Create FormData for file upload support\r\n    const formData = new FormData();\r\n\r\n    // Add all staff fields to FormData\r\n    Object.keys(staffData).forEach(key => {\r\n      const value = staffData[key];\r\n      if (value !== null && value !== undefined && value !== '') {\r\n        formData.append(key, value);\r\n      }\r\n    });\r\n\r\n    // Don't set Content-Type header - let browser set it for FormData\r\n    return this.request('/api/staff', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  static async addStaffWithFile(staffData) {\r\n    // Create FormData for file upload support\r\n    const formData = new FormData();\r\n\r\n    // Add all staff fields to FormData\r\n    Object.keys(staffData).forEach(key => {\r\n      if (staffData[key] !== null && staffData[key] !== undefined) {\r\n        formData.append(key, staffData[key]);\r\n      }\r\n    });\r\n\r\n    return this.request('/api/staff', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n  }\r\n\r\n  static async updateStaff(id, staffData) {\r\n    return this.request(`/api/staff/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(staffData),\r\n    });\r\n  }\r\n\r\n  static async deleteStaff(id) {\r\n    return this.request(`/api/staff/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n\r\n  static async getDashboard() {\r\n    try {\r\n      const response = await this.request('/api/dashboard');\r\n\r\n      // Ensure proper structure\r\n      return {\r\n        totalStaff: response.totalStaff || response.total_staff || 0,\r\n        staffList: Array.isArray(response.staffList) ? response.staffList : [],\r\n        ...response\r\n      };\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard:', error);\r\n      return { totalStaff: 0, staffList: [] };\r\n    }\r\n  }\r\n\r\n\r\n  static async getUserProfile() {\r\n    return this.request('/api/profile');\r\n  }\r\n\r\n  static async updateProfile(profileData) {\r\n    return this.request('/api/profile', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(profileData),\r\n    });\r\n  }\r\n}\r\n\r\nexport default ApiService;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,UAAU,CAAC;EACf,aAAaC,OAAOA,CAACC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC3C,MAAMC,GAAG,GAAG,GAAGL,YAAY,GAAGG,QAAQ,EAAE;IACxC,MAAMG,MAAM,GAAG;MACb,GAAGF;IACL,CAAC;;IAED;IACA,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTD,MAAM,CAACI,OAAO,GAAG;QACf,GAAGJ,MAAM,CAACI,OAAO;QACjB,eAAe,EAAE,UAAUH,KAAK;MAClC,CAAC;IACH;;IAEA;IACA,IAAI,EAAEH,OAAO,CAACO,IAAI,YAAYC,QAAQ,CAAC,EAAE;MACvCN,MAAM,CAACI,OAAO,GAAG;QACf,cAAc,EAAE,kBAAkB;QAClC,GAAGJ,MAAM,CAACI;MACZ,CAAC;IACH;IAEA,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAEC,MAAM,CAAC;MAEzC,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;QAChB,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UAC3B;UACAR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;UAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;UAC/B,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;QACzD;QAEA,IAAIC,YAAY;QAChB,IAAI;UACF,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;UACvCF,YAAY,GAAGC,SAAS,CAACE,OAAO,IAAIF,SAAS,CAACG,KAAK,IAAI,QAAQV,QAAQ,CAACG,MAAM,EAAE;QAClF,CAAC,CAAC,MAAM;UACNG,YAAY,GAAG,QAAQN,QAAQ,CAACG,MAAM,KAAKH,QAAQ,CAACW,UAAU,EAAE;QAClE;QACA,MAAM,IAAIN,KAAK,CAACC,YAAY,CAAC;MAC/B;MAEA,MAAMM,IAAI,GAAG,MAAMZ,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCK,OAAO,CAACC,GAAG,CAAC,oBAAoBxB,QAAQ,GAAG,EAAEsB,IAAI,CAAC;MAClD,OAAOA,IAAI;IAEb,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAClC,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,aAAaK,YAAYA,CAAA,EAAG;IAC1B,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAM,IAAI,CAACX,OAAO,CAAC,YAAY,CAAC;;MAEjD;MACA,IAAI2B,KAAK,CAACC,OAAO,CAACjB,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ;MACjB,CAAC,MAAM,IAAIA,QAAQ,IAAIgB,KAAK,CAACC,OAAO,CAACjB,QAAQ,CAACY,IAAI,CAAC,EAAE;QACnD,OAAOZ,QAAQ,CAACY,IAAI;MACtB,CAAC,MAAM,IAAIZ,QAAQ,IAAIgB,KAAK,CAACC,OAAO,CAACjB,QAAQ,CAACkB,KAAK,CAAC,EAAE;QACpD,OAAOlB,QAAQ,CAACkB,KAAK;MACvB,CAAC,MAAM;QACLL,OAAO,CAACM,IAAI,CAAC,wCAAwC,EAAEnB,QAAQ,CAAC;QAChE,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,EAAE,CAAC,CAAC;IACb;EACF;;EAEA;EACA,aAAaU,QAAQA,CAACC,QAAQ,EAAE;IAC9B,OAAO,IAAI,CAAChC,OAAO,CAAC,eAAe,EAAE;MACnCiC,MAAM,EAAE,MAAM;MACdxB,IAAI,EAAEyB,IAAI,CAACC,SAAS,CAACH,QAAQ;IAC/B,CAAC,CAAC;EACJ;EAEA,aAAaI,KAAKA,CAACC,WAAW,EAAE;IAC9B,OAAO,IAAI,CAACrC,OAAO,CAAC,YAAY,EAAE;MAChCiC,MAAM,EAAE,MAAM;MACdxB,IAAI,EAAEyB,IAAI,CAACC,SAAS,CAACE,WAAW;IAClC,CAAC,CAAC;EACJ;EAEA,aAAaC,MAAMA,CAAA,EAAG;IACpB,IAAI;MACF,MAAM,IAAI,CAACtC,OAAO,CAAC,aAAa,EAAE;QAChCiC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,SAAS;MACR3B,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;MAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IACjC;EACF;EAEA,aAAawB,cAAcA,CAACC,KAAK,EAAE;IACjC,OAAO,IAAI,CAACxC,OAAO,CAAC,sBAAsB,EAAE;MAC1CiC,MAAM,EAAE,MAAM;MACdxB,IAAI,EAAEyB,IAAI,CAACC,SAAS,CAAC;QAAEK;MAAM,CAAC;IAChC,CAAC,CAAC;EACJ;EAEA,aAAaC,qBAAqBA,CAACD,KAAK,EAAEE,IAAI,EAAEC,WAAW,EAAE;IAC3D,OAAO,IAAI,CAAC3C,OAAO,CAAC,qBAAqB,EAAE;MACzCiC,MAAM,EAAE,MAAM;MACdxB,IAAI,EAAEyB,IAAI,CAACC,SAAS,CAAC;QACnBK,KAAK,EAAEA,KAAK;QACZE,IAAI,EAAEA,IAAI;QACVE,YAAY,EAAED;MAChB,CAAC;IACH,CAAC,CAAC;EACJ;EAEA,aAAaE,QAAQA,CAACC,EAAE,EAAE;IACxB,OAAO,IAAI,CAAC9C,OAAO,CAAC,cAAc8C,EAAE,EAAE,CAAC;EACzC;EAEA,aAAaC,QAAQA,CAACC,SAAS,EAAE;IAC/B;IACA,MAAMC,QAAQ,GAAG,IAAIvC,QAAQ,CAAC,CAAC;;IAE/B;IACAwC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;MACpC,MAAMC,KAAK,GAAGN,SAAS,CAACK,GAAG,CAAC;MAC5B,IAAIC,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,IAAID,KAAK,KAAK,EAAE,EAAE;QACzDL,QAAQ,CAACO,MAAM,CAACH,GAAG,EAAEC,KAAK,CAAC;MAC7B;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,IAAI,CAACtD,OAAO,CAAC,YAAY,EAAE;MAChCiC,MAAM,EAAE,MAAM;MACdxB,IAAI,EAAEwC;IACR,CAAC,CAAC;EACJ;EAIA,aAAaQ,gBAAgBA,CAACT,SAAS,EAAE;IACvC;IACA,MAAMC,QAAQ,GAAG,IAAIvC,QAAQ,CAAC,CAAC;;IAE/B;IACAwC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;MACpC,IAAIL,SAAS,CAACK,GAAG,CAAC,KAAK,IAAI,IAAIL,SAAS,CAACK,GAAG,CAAC,KAAKE,SAAS,EAAE;QAC3DN,QAAQ,CAACO,MAAM,CAACH,GAAG,EAAEL,SAAS,CAACK,GAAG,CAAC,CAAC;MACtC;IACF,CAAC,CAAC;IAEF,OAAO,IAAI,CAACrD,OAAO,CAAC,YAAY,EAAE;MAChCiC,MAAM,EAAE,MAAM;MACdxB,IAAI,EAAEwC;IACR,CAAC,CAAC;EACJ;EAEA,aAAaS,WAAWA,CAACZ,EAAE,EAAEE,SAAS,EAAE;IACtC,OAAO,IAAI,CAAChD,OAAO,CAAC,cAAc8C,EAAE,EAAE,EAAE;MACtCb,MAAM,EAAE,KAAK;MACbxB,IAAI,EAAEyB,IAAI,CAACC,SAAS,CAACa,SAAS;IAChC,CAAC,CAAC;EACJ;EAEA,aAAaW,WAAWA,CAACb,EAAE,EAAE;IAC3B,OAAO,IAAI,CAAC9C,OAAO,CAAC,cAAc8C,EAAE,EAAE,EAAE;MACtCb,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EAEA,aAAa2B,YAAYA,CAAA,EAAG;IAC1B,IAAI;MACF,MAAMjD,QAAQ,GAAG,MAAM,IAAI,CAACX,OAAO,CAAC,gBAAgB,CAAC;;MAErD;MACA,OAAO;QACL6D,UAAU,EAAElD,QAAQ,CAACkD,UAAU,IAAIlD,QAAQ,CAACmD,WAAW,IAAI,CAAC;QAC5DC,SAAS,EAAEpC,KAAK,CAACC,OAAO,CAACjB,QAAQ,CAACoD,SAAS,CAAC,GAAGpD,QAAQ,CAACoD,SAAS,GAAG,EAAE;QACtE,GAAGpD;MACL,CAAC;IACH,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO;QAAEwC,UAAU,EAAE,CAAC;QAAEE,SAAS,EAAE;MAAG,CAAC;IACzC;EACF;EAGA,aAAaC,cAAcA,CAAA,EAAG;IAC5B,OAAO,IAAI,CAAChE,OAAO,CAAC,cAAc,CAAC;EACrC;EAEA,aAAaiE,aAAaA,CAACC,WAAW,EAAE;IACtC,OAAO,IAAI,CAAClE,OAAO,CAAC,cAAc,EAAE;MAClCiC,MAAM,EAAE,KAAK;MACbxB,IAAI,EAAEyB,IAAI,CAACC,SAAS,CAAC+B,WAAW;IAClC,CAAC,CAAC;EACJ;AACF;AAEA,eAAenE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}