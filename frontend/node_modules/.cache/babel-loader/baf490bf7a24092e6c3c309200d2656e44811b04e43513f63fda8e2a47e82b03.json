{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"row\", \"rowId\", \"rowNode\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"showRightBorder\", \"showLeftBorder\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ownerDocument from '@mui/utils/ownerDocument';\nimport capitalize from '@mui/utils/capitalize';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useStore } from '@mui/x-internals/store';\nimport { Rowspan } from '@mui/x-virtualizer';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { PinnedColumnPosition } from \"../../internals/constants.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridEditCellStateSelector } from \"../../hooks/features/editing/gridEditingSelectors.js\";\nimport { attachPinnedStyle } from \"../../internals/utils/index.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedColumnPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedColumnPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedColumnPosition.NONE]: undefined,\n  [PinnedColumnPosition.VIRTUAL]: undefined\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedColumnPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedColumnPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      row,\n      rowId,\n      rowNode,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      showRightBorder,\n      showLeftBorder,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const editCellState = useGridSelector(apiRef, gridEditCellStateSelector, {\n    rowId,\n    field\n  });\n  const config = useGridConfiguration();\n  const cellAggregationResult = config.hooks.useCellAggregationResult(rowId, field);\n  const cellMode = editCellState ? GridCellModes.Edit : GridCellModes.View;\n  const {\n    value: forcedValue,\n    formattedValue: forcedFormattedValue\n  } = cellAggregationResult || {};\n  const cellParams = apiRef.current.getCellParamsForRow(rowId, field, row, {\n    colDef: column,\n    cellMode,\n    rowNode: rowNode,\n    tabIndex: useGridSelector(apiRef, () => {\n      const cellTabIndex = gridTabIndexCellSelector(apiRef);\n      return cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === rowId ? 0 : -1;\n    }),\n    hasFocus: useGridSelector(apiRef, () => {\n      const focus = gridFocusCellSelector(apiRef);\n      return focus?.id === rowId && focus.field === field;\n    }),\n    value: forcedValue,\n    formattedValue: forcedFormattedValue\n  });\n  cellParams.api = apiRef.current;\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const store = apiRef.current.virtualizer.store;\n  const hiddenCells = useStore(store, Rowspan.selectors.hiddenCells);\n  const spannedCells = useStore(store, Rowspan.selectors.spannedCells);\n  const {\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && 'getActions' in column && typeof column.getActions === 'function' && column.getActions(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[colIndex] ?? false;\n  const rowSpan = spannedCells[rowId]?.[colIndex] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        height: 0,\n        border: 0\n      };\n    }\n    const cellStyle = attachPinnedStyle(_extends({\n      '--width': `${width}px`\n    }, styleProp), isRtl, pinnedPosition, pinnedOffset);\n    const isLeftPinned = pinnedPosition === PinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedColumnPosition.RIGHT;\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 10;\n      if (isLeftPinned || isRightPinned) {\n        cellStyle.zIndex = 40;\n      }\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    ref: handleRef,\n    children: children\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") GridCell.displayName = \"GridCell\";\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  isNotVisible: PropTypes.bool.isRequired,\n  pinnedOffset: PropTypes.number,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  row: PropTypes.object.isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  rowNode: PropTypes.object.isRequired,\n  showLeftBorder: PropTypes.bool.isRequired,\n  showRightBorder: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","PropTypes","clsx","useForkRef","composeClasses","ownerDocument","capitalize","fastMemo","useRtl","forwardRef","useStore","Rowspan","doesSupportPreventScroll","getDataGridUtilityClass","gridClasses","GridCellModes","useGridSelector","useGridRootProps","gridFocusCellSelector","gridTabIndexCellSelector","GridPinnedColumnPosition","PinnedColumnPosition","useGridPrivateApiContext","gridEditCellStateSelector","attachPinnedStyle","useGridConfiguration","jsx","_jsx","gridPinnedColumnPositionLookup","LEFT","RIGHT","NONE","undefined","VIRTUAL","useUtilityClasses","ownerState","align","showLeftBorder","showRightBorder","pinnedPosition","isEditable","isSelected","isSelectionMode","classes","slots","root","warnedOnce","GridCell","props","ref","column","row","rowId","rowNode","colIndex","width","className","style","styleProp","colSpan","disableDragEvents","isNotVisible","pinnedOffset","onClick","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyDown","onKeyUp","onDragEnter","onDragOver","other","apiRef","rootProps","isRtl","field","editCellState","config","cellAggregationResult","hooks","useCellAggregationResult","cellMode","Edit","View","value","forcedValue","formattedValue","forcedFormattedValue","cellParams","current","getCellParamsForRow","colDef","tabIndex","cellTabIndex","id","hasFocus","focus","api","unstable_applyPipeProcessors","store","virtualizer","hiddenCells","selectors","spannedCells","canManageOwnFocus","type","getActions","getRowParams","some","action","disabled","rootClasses","getCellClassName","pipesClassName","filter","Boolean","join","classNames","cellClassName","push","display","valueToRender","cellRef","useRef","handleRef","focusElementRef","cellSelection","publishMouseUp","useCallback","eventName","event","params","getCellParams","publishEvent","publishMouseDown","publish","propHandler","getRow","isCellRowSpanned","rowSpan","useMemo","padding","opacity","height","border","cellStyle","isLeftPinned","isRightPinned","zIndex","useEffect","doc","rootElementRef","contains","activeElement","focusableElement","querySelector","elementToFocus","preventScroll","scrollPosition","getScrollPosition","scroll","role","handleFocus","onFocus","process","env","NODE_ENV","experimentalFeatures","warnIfFocusStateIsNotSynced","focusedCell","console","warn","children","title","renderCell","renderEditCell","updatedRow","getRowWithUpdatedValues","editCellStateRest","valueFormatter","valueString","toString","isValidElement","cloneElement","draggableEventHandlers","displayName","propTypes","oneOf","isRequired","number","object","bool","oneOfType","string","MemoizedGridCell"],"sources":["C:/Users/USER/PycharmProjects/Company/frontend/node_modules/@mui/x-data-grid/esm/components/cell/GridCell.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"row\", \"rowId\", \"rowNode\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"showRightBorder\", \"showLeftBorder\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ownerDocument from '@mui/utils/ownerDocument';\nimport capitalize from '@mui/utils/capitalize';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useStore } from '@mui/x-internals/store';\nimport { Rowspan } from '@mui/x-virtualizer';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { PinnedColumnPosition } from \"../../internals/constants.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridEditCellStateSelector } from \"../../hooks/features/editing/gridEditingSelectors.js\";\nimport { attachPinnedStyle } from \"../../internals/utils/index.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedColumnPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedColumnPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedColumnPosition.NONE]: undefined,\n  [PinnedColumnPosition.VIRTUAL]: undefined\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedColumnPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedColumnPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      row,\n      rowId,\n      rowNode,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      showRightBorder,\n      showLeftBorder,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const editCellState = useGridSelector(apiRef, gridEditCellStateSelector, {\n    rowId,\n    field\n  });\n  const config = useGridConfiguration();\n  const cellAggregationResult = config.hooks.useCellAggregationResult(rowId, field);\n  const cellMode = editCellState ? GridCellModes.Edit : GridCellModes.View;\n  const {\n    value: forcedValue,\n    formattedValue: forcedFormattedValue\n  } = cellAggregationResult || {};\n  const cellParams = apiRef.current.getCellParamsForRow(rowId, field, row, {\n    colDef: column,\n    cellMode,\n    rowNode: rowNode,\n    tabIndex: useGridSelector(apiRef, () => {\n      const cellTabIndex = gridTabIndexCellSelector(apiRef);\n      return cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === rowId ? 0 : -1;\n    }),\n    hasFocus: useGridSelector(apiRef, () => {\n      const focus = gridFocusCellSelector(apiRef);\n      return focus?.id === rowId && focus.field === field;\n    }),\n    value: forcedValue,\n    formattedValue: forcedFormattedValue\n  });\n  cellParams.api = apiRef.current;\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const store = apiRef.current.virtualizer.store;\n  const hiddenCells = useStore(store, Rowspan.selectors.hiddenCells);\n  const spannedCells = useStore(store, Rowspan.selectors.spannedCells);\n  const {\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && 'getActions' in column && typeof column.getActions === 'function' && column.getActions(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[colIndex] ?? false;\n  const rowSpan = spannedCells[rowId]?.[colIndex] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        height: 0,\n        border: 0\n      };\n    }\n    const cellStyle = attachPinnedStyle(_extends({\n      '--width': `${width}px`\n    }, styleProp), isRtl, pinnedPosition, pinnedOffset);\n    const isLeftPinned = pinnedPosition === PinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedColumnPosition.RIGHT;\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 10;\n      if (isLeftPinned || isRightPinned) {\n        cellStyle.zIndex = 40;\n      }\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    ref: handleRef,\n    children: children\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") GridCell.displayName = \"GridCell\";\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  isNotVisible: PropTypes.bool.isRequired,\n  pinnedOffset: PropTypes.number,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  row: PropTypes.object.isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  rowNode: PropTypes.object.isRequired,\n  showLeftBorder: PropTypes.bool.isRequired,\n  showRightBorder: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}