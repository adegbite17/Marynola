{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nclass ApiService {\n  static async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      ...options\n    };\n\n    // Add auth token if available\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers = {\n        ...config.headers,\n        'Authorization': `Bearer ${token}`\n      };\n    }\n\n    // Only add Content-Type for non-FormData requests\n    if (!(options.body instanceof FormData)) {\n      config.headers = {\n        'Content-Type': 'application/json',\n        ...config.headers\n      };\n    }\n\n    // Log the request details for debugging\n    console.log('API Request:', {\n      url,\n      method: config.method || 'GET',\n      headers: config.headers,\n      body: config.body\n    });\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          throw new Error('Session expired. Please login again.');\n        }\n        let errorMessage;\n        try {\n          const errorData = await response.json();\n          console.error('API Error Response:', errorData);\n          errorMessage = errorData.message || errorData.error || `HTTP ${response.status}`;\n        } catch {\n          errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n        }\n        throw new Error(errorMessage);\n      }\n      const data = await response.json();\n      console.log(`API Response for ${endpoint}:`, data);\n      return data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n  static async getStaffList() {\n    try {\n      const response = await this.request('/api/staff');\n\n      // Handle various response formats\n      if (Array.isArray(response)) {\n        return response;\n      } else if (response && Array.isArray(response.data)) {\n        return response.data;\n      } else if (response && Array.isArray(response.staff)) {\n        return response.staff;\n      } else if (response && Array.isArray(response.staffList)) {\n        return response.staffList;\n      } else {\n        console.warn('Unexpected staff list response format:', response);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching staff list:', error);\n      return [];\n    }\n  }\n  static async register(userData) {\n    return this.request('/api/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  }\n  static async login(credentials) {\n    return this.request('/api/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n  }\n  static async logout() {\n    try {\n      await this.request('/api/logout', {\n        method: 'POST'\n      });\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    }\n  }\n  static async forgotPassword(data) {\n    const response = await fetch(`${API_BASE_URL}/api/forgot-password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n  }\n  static async resetPassword(data) {\n    const response = await fetch(`${API_BASE_URL}/api/reset-password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n  }\n  static async getStaff(id) {\n    return this.request(`/api/staff/${id}`);\n  }\n  static async addStaff(staffData, isFormData = false) {\n    const options = {\n      method: 'POST'\n    };\n    if (isFormData) {\n      options.body = staffData;\n    } else {\n      options.headers = {\n        'Content-Type': 'application/json'\n      };\n      options.body = JSON.stringify(staffData);\n    }\n    return this.request('/api/staff', options);\n  }\n  static async addStaffWithFile(staffData) {\n    const formData = new FormData();\n    Object.keys(staffData).forEach(key => {\n      if (staffData[key] !== null && staffData[key] !== undefined) {\n        formData.append(key, staffData[key]);\n      }\n    });\n    return this.request('/api/staff', {\n      method: 'POST',\n      body: formData\n    });\n  }\n  static async updateStaff(id, staffData) {\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(staffData)\n    };\n    return this.request(`/api/staff/${id}`, options);\n  }\n  static async updateStaffWithFile(id, formData) {\n    console.log('Updating staff with ID:', id);\n    for (let pair of formData.entries()) {\n      console.log('FormData entry:', pair[0], pair[1]);\n    }\n    const options = {\n      method: 'PUT',\n      body: formData\n    };\n    return this.request(`/api/staff/${id}/update-with-file`, options);\n  }\n  static async getDashboard() {\n    try {\n      const response = await this.request('/api/dashboard');\n      let staffList = [];\n      if (Array.isArray(response.staffList)) {\n        staffList = response.staffList;\n      } else if (Array.isArray(response.staff)) {\n        staffList = response.staff;\n      } else if (Array.isArray(response.data)) {\n        staffList = response.data;\n      } else if (Array.isArray(response)) {\n        staffList = response;\n      }\n      return {\n        totalStaff: response.totalStaff || response.total_staff || staffList.length || 0,\n        staffList: staffList,\n        ...response\n      };\n    } catch (error) {\n      console.error('Error fetching dashboard:', error);\n      return {\n        totalStaff: 0,\n        staffList: []\n      };\n    }\n  }\n  static async downloadStaffId(id) {\n    const response = await fetch(`${API_BASE_URL}/api/staff/${id}/download-id`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to download ID');\n    }\n    return response.blob();\n  }\n  static async deleteStaff(id) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    };\n    return this.request(`/api/staff/${id}`, options);\n  }\n  static async searchStaff(query, employmentStatus = '') {\n    const params = new URLSearchParams();\n    if (query) params.append('q', query);\n    if (employmentStatus) params.append('employment_status', employmentStatus);\n    const response = await fetch(`${API_BASE_URL}/api/staff/search?${params}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n  }\n  static async downloadStaffExcel() {\n    const response = await fetch(`${API_BASE_URL}/api/staff/download`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'staff_list.xlsx';\n    document.body.appendChild(a);\n    a.click();\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n  }\n  static async getUserProfile() {\n    return this.request('/api/profile');\n  }\n  static async updateProfile(profileData) {\n    return this.request('/api/profile', {\n      method: 'PUT',\n      body: JSON.stringify(profileData)\n    });\n  }\n}\nexport default ApiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","request","endpoint","options","url","config","token","localStorage","getItem","headers","body","FormData","console","log","method","response","fetch","ok","status","removeItem","Error","errorMessage","errorData","json","error","message","statusText","data","getStaffList","Array","isArray","staff","staffList","warn","register","userData","JSON","stringify","login","credentials","logout","forgotPassword","catch","resetPassword","getStaff","id","addStaff","staffData","isFormData","addStaffWithFile","formData","Object","keys","forEach","key","undefined","append","updateStaff","updateStaffWithFile","pair","entries","getDashboard","totalStaff","total_staff","length","downloadStaffId","blob","deleteStaff","searchStaff","query","employmentStatus","params","URLSearchParams","downloadStaffExcel","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","revokeObjectURL","removeChild","getUserProfile","updateProfile","profileData"],"sources":["C:/Users/USER/PycharmProjects/Company/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nclass ApiService {\r\n  static async request(endpoint, options = {}) {\r\n    const url = `${API_BASE_URL}${endpoint}`;\r\n    const config = {\r\n      ...options,\r\n    };\r\n\r\n    // Add auth token if available\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers = {\r\n        ...config.headers,\r\n        'Authorization': `Bearer ${token}`,\r\n      };\r\n    }\r\n\r\n    // Only add Content-Type for non-FormData requests\r\n    if (!(options.body instanceof FormData)) {\r\n      config.headers = {\r\n        'Content-Type': 'application/json',\r\n        ...config.headers,\r\n      };\r\n    }\r\n\r\n    // Log the request details for debugging\r\n    console.log('API Request:', {\r\n      url,\r\n      method: config.method || 'GET',\r\n      headers: config.headers,\r\n      body: config.body\r\n    });\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          throw new Error('Session expired. Please login again.');\r\n        }\r\n\r\n        let errorMessage;\r\n        try {\r\n          const errorData = await response.json();\r\n          console.error('API Error Response:', errorData);\r\n          errorMessage = errorData.message || errorData.error || `HTTP ${response.status}`;\r\n        } catch {\r\n          errorMessage = `HTTP ${response.status}: ${response.statusText}`;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(`API Response for ${endpoint}:`, data);\r\n      return data;\r\n\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getStaffList() {\r\n    try {\r\n      const response = await this.request('/api/staff');\r\n\r\n      // Handle various response formats\r\n      if (Array.isArray(response)) {\r\n        return response;\r\n      } else if (response && Array.isArray(response.data)) {\r\n        return response.data;\r\n      } else if (response && Array.isArray(response.staff)) {\r\n        return response.staff;\r\n      } else if (response && Array.isArray(response.staffList)) {\r\n        return response.staffList;\r\n      } else {\r\n        console.warn('Unexpected staff list response format:', response);\r\n        return [];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching staff list:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  static async register(userData) {\r\n    return this.request('/api/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData),\r\n    });\r\n  }\r\n\r\n  static async login(credentials) {\r\n    return this.request('/api/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify(credentials),\r\n    });\r\n  }\r\n\r\n  static async logout() {\r\n    try {\r\n      await this.request('/api/logout', {\r\n        method: 'POST',\r\n      });\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    }\r\n  }\r\n\r\n  static async forgotPassword(data) {\r\n    const response = await fetch(`${API_BASE_URL}/api/forgot-password`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n  }\r\n\r\n  static async resetPassword(data) {\r\n    const response = await fetch(`${API_BASE_URL}/api/reset-password`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n  }\r\n\r\n  static async getStaff(id) {\r\n    return this.request(`/api/staff/${id}`);\r\n  }\r\n\r\n  static async addStaff(staffData, isFormData = false) {\r\n    const options = {\r\n      method: 'POST',\r\n    };\r\n\r\n    if (isFormData) {\r\n      options.body = staffData;\r\n    } else {\r\n      options.headers = {\r\n        'Content-Type': 'application/json',\r\n      };\r\n      options.body = JSON.stringify(staffData);\r\n    }\r\n\r\n    return this.request('/api/staff', options);\r\n  }\r\n\r\n  static async addStaffWithFile(staffData) {\r\n    const formData = new FormData();\r\n\r\n    Object.keys(staffData).forEach(key => {\r\n      if (staffData[key] !== null && staffData[key] !== undefined) {\r\n        formData.append(key, staffData[key]);\r\n      }\r\n    });\r\n\r\n    return this.request('/api/staff', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n  }\r\n\r\n  static async updateStaff(id, staffData) {\r\n    const options = {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(staffData)\r\n    };\r\n\r\n    return this.request(`/api/staff/${id}`, options);\r\n  }\r\n\r\n  static async updateStaffWithFile(id, formData) {\r\n    console.log('Updating staff with ID:', id);\r\n    for (let pair of formData.entries()) {\r\n      console.log('FormData entry:', pair[0], pair[1]);\r\n    }\r\n\r\n    const options = {\r\n      method: 'PUT',\r\n      body: formData\r\n    };\r\n\r\n    return this.request(`/api/staff/${id}/update-with-file`, options);\r\n  }\r\n\r\n  static async getDashboard() {\r\n    try {\r\n      const response = await this.request('/api/dashboard');\r\n\r\n      let staffList = [];\r\n      if (Array.isArray(response.staffList)) {\r\n        staffList = response.staffList;\r\n      } else if (Array.isArray(response.staff)) {\r\n        staffList = response.staff;\r\n      } else if (Array.isArray(response.data)) {\r\n        staffList = response.data;\r\n      } else if (Array.isArray(response)) {\r\n        staffList = response;\r\n      }\r\n\r\n      return {\r\n        totalStaff: response.totalStaff || response.total_staff || staffList.length || 0,\r\n        staffList: staffList,\r\n        ...response\r\n      };\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard:', error);\r\n      return { totalStaff: 0, staffList: [] };\r\n    }\r\n  }\r\n\r\n  static async downloadStaffId(id) {\r\n    const response = await fetch(`${API_BASE_URL}/api/staff/${id}/download-id`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to download ID');\r\n    }\r\n\r\n    return response.blob();\r\n  }\r\n\r\n  static async deleteStaff(id) {\r\n    const options = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      }\r\n    };\r\n\r\n    return this.request(`/api/staff/${id}`, options);\r\n  }\r\n\r\n  static async searchStaff(query, employmentStatus = '') {\r\n    const params = new URLSearchParams();\r\n    if (query) params.append('q', query);\r\n    if (employmentStatus) params.append('employment_status', employmentStatus);\r\n\r\n    const response = await fetch(`${API_BASE_URL}/api/staff/search?${params}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n  }\r\n\r\n  static async downloadStaffExcel() {\r\n    const response = await fetch(`${API_BASE_URL}/api/staff/download`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'staff_list.xlsx';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  static async getUserProfile() {\r\n    return this.request('/api/profile');\r\n  }\r\n\r\n  static async updateProfile(profileData) {\r\n    return this.request('/api/profile', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(profileData),\r\n    });\r\n  }\r\n}\r\n\r\nexport default ApiService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}