{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\PycharmProjects\\\\Company\\\\frontend\\\\src\\\\components\\\\auth\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, TextField, Button, Typography, Box, Alert } from '@mui/material';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const [formData, setFormData] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    if (formData.password.length < 8) {\n      setError('Password must be at least 8 characters long');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost:8000/api/auth/password-reset-confirm/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: token,\n          password: formData.password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert('Password reset successful! Please login with your new password.');\n        navigate('/login');\n      } else {\n        setError(data.detail || data.message || 'Failed to reset password.');\n      }\n    } catch (error) {\n      console.error('Password reset error:', error);\n      setError('Network error. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/marynola.jpg\",\n            alt: \"Marynola Logo\",\n            style: {\n              width: '100px',\n              height: '100px',\n              objectFit: 'contain',\n              marginBottom: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Set New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"password\",\n            label: \"New Password\",\n            type: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            required: true,\n            disabled: loading,\n            helperText: \"Password must be at least 8 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            name: \"confirmPassword\",\n            label: \"Confirm New Password\",\n            type: \"password\",\n            value: formData.confirmPassword,\n            onChange: handleChange,\n            required: true,\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            disabled: loading,\n            children: loading ? 'Resetting...' : 'Reset Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"os4ermALvGtDKnEpfjgxzn8LkFE=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Container","Paper","TextField","Button","Typography","Box","Alert","useNavigate","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","navigate","token","formData","setFormData","password","confirmPassword","error","setError","loading","setLoading","handleChange","e","target","name","value","handleSubmit","preventDefault","length","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","detail","message","console","maxWidth","children","sx","mt","elevation","p","textAlign","mb","src","alt","style","width","height","objectFit","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","severity","onSubmit","fullWidth","margin","label","type","onChange","required","disabled","helperText","_c","$RefreshReg$"],"sources":["C:/Users/USER/PycharmProjects/Company/frontend/src/components/auth/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Paper, TextField, Button, Typography, Box, Alert } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n  const { token } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    setError('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    if (formData.password.length < 8) {\r\n      setError('Password must be at least 8 characters long');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/auth/password-reset-confirm/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          token: token,\r\n          password: formData.password\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert('Password reset successful! Please login with your new password.');\r\n        navigate('/login');\r\n      } else {\r\n        setError(data.detail || data.message || 'Failed to reset password.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Password reset error:', error);\r\n      setError('Network error. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ mt: 8 }}>\r\n        <Paper elevation={3} sx={{ p: 4 }}>\r\n          <Box sx={{ textAlign: 'center', mb: 3 }}>\r\n            <img\r\n              src=\"/marynola.jpg\"\r\n              alt=\"Marynola Logo\"\r\n              style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                objectFit: 'contain',\r\n                marginBottom: '16px'\r\n              }}\r\n            />\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Set New Password\r\n            </Typography>\r\n          </Box>\r\n\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"password\"\r\n              label=\"New Password\"\r\n              type=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={loading}\r\n              helperText=\"Password must be at least 8 characters\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              margin=\"normal\"\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm New Password\"\r\n              type=\"password\"\r\n              value={formData.confirmPassword}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={loading}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Resetting...' : 'Reset Password'}\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}