{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 60,\n  '&:hover': {\n    zIndex: 70\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-headersTotalHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-headersTotalHeight)',\n  right: 0\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: 'calc(var(--DataGrid-hasScrollX) * (100% - var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: 0\n});\nexport const ScrollbarCorner = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'var(--size)',\n  right: 0,\n  bottom: 0,\n  overflow: 'scroll'\n});\nconst GridVirtualScrollbar = forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const propertyScrollPosition = props.position === 'vertical' ? 'top' : 'left';\n  const scrollbarInnerSize = props.position === 'horizontal' ? dimensions.minimumSize.width : dimensions.minimumSize.height - dimensions.headersTotalHeight;\n  const onScrollerScroll = useEventCallback(() => {\n    const scrollbar = scrollbarRef.current;\n    const scrollPosition = props.scrollPosition.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (scrollPosition[propertyScrollPosition] === lastPosition.current) {\n      return;\n    }\n    lastPosition.current = scrollPosition[propertyScrollPosition];\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    scrollbar[propertyScroll] = scrollPosition[propertyScrollPosition];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    scroller[propertyScroll] = scrollbar[propertyScroll];\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    const options = {\n      passive: true\n    };\n    scroller.addEventListener('scroll', onScrollerScroll, options);\n    scrollbar.addEventListener('scroll', onScrollbarScroll, options);\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, options);\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, options);\n    };\n  });\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  const scrollbarInnerStyle = React.useMemo(() => ({\n    [propertyDimension]: `${scrollbarInnerSize}px`\n  }), [propertyDimension, scrollbarInnerSize]);\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\"\n    // tabIndex does not prevent focus with a mouse click, throwing a console error\n    // https://github.com/mui/mui-x/issues/16706\n    ,\n\n    onFocus: event => {\n      event.target.blur();\n    },\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      style: scrollbarInnerStyle\n    })\n  });\n});\nif (process.env.NODE_ENV !== \"production\") GridVirtualScrollbar.displayName = \"GridVirtualScrollbar\";\nexport { GridVirtualScrollbar };","map":{"version":3,"names":["React","styled","useEventCallback","useForkRef","composeClasses","forwardRef","useOnMount","useGridPrivateApiContext","gridDimensionsSelector","useGridSelector","useGridRootProps","getDataGridUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","position","classes","slots","root","content","Scrollbar","display","zIndex","ScrollbarVertical","width","height","overflowY","overflowX","outline","top","right","ScrollbarHorizontal","bottom","ScrollbarCorner","overflow","GridVirtualScrollbar","props","ref","apiRef","rootProps","isLocked","useRef","lastPosition","scrollbarRef","dimensions","propertyDimension","propertyScroll","propertyScrollPosition","scrollbarInnerSize","minimumSize","headersTotalHeight","onScrollerScroll","scrollbar","current","scrollPosition","onScrollbarScroll","scroller","virtualScrollerRef","options","passive","addEventListener","removeEventListener","Container","scrollbarInnerStyle","useMemo","className","tabIndex","onFocus","event","target","blur","children","style","process","env","NODE_ENV","displayName"],"sources":["C:/Users/USER/PycharmProjects/Company/frontend/node_modules/@mui/x-data-grid/esm/components/virtualization/GridVirtualScrollbar.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 60,\n  '&:hover': {\n    zIndex: 70\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-headersTotalHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-headersTotalHeight)',\n  right: 0\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: 'calc(var(--DataGrid-hasScrollX) * (100% - var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: 0\n});\nexport const ScrollbarCorner = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'var(--size)',\n  right: 0,\n  bottom: 0,\n  overflow: 'scroll'\n});\nconst GridVirtualScrollbar = forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const propertyScrollPosition = props.position === 'vertical' ? 'top' : 'left';\n  const scrollbarInnerSize = props.position === 'horizontal' ? dimensions.minimumSize.width : dimensions.minimumSize.height - dimensions.headersTotalHeight;\n  const onScrollerScroll = useEventCallback(() => {\n    const scrollbar = scrollbarRef.current;\n    const scrollPosition = props.scrollPosition.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (scrollPosition[propertyScrollPosition] === lastPosition.current) {\n      return;\n    }\n    lastPosition.current = scrollPosition[propertyScrollPosition];\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    scrollbar[propertyScroll] = scrollPosition[propertyScrollPosition];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    scroller[propertyScroll] = scrollbar[propertyScroll];\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    const options = {\n      passive: true\n    };\n    scroller.addEventListener('scroll', onScrollerScroll, options);\n    scrollbar.addEventListener('scroll', onScrollbarScroll, options);\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, options);\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, options);\n    };\n  });\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  const scrollbarInnerStyle = React.useMemo(() => ({\n    [propertyDimension]: `${scrollbarInnerSize}px`\n  }), [propertyDimension, scrollbarInnerSize]);\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\"\n    // tabIndex does not prevent focus with a mouse click, throwing a console error\n    // https://github.com/mui/mui-x/issues/16706\n    ,\n    onFocus: event => {\n      event.target.blur();\n    },\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      style: scrollbarInnerStyle\n    })\n  });\n});\nif (process.env.NODE_ENV !== \"production\") GridVirtualScrollbar.displayName = \"GridVirtualScrollbar\";\nexport { GridVirtualScrollbar };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}